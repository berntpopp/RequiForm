import{_ as e,p as t,a as r,i as a,l as i,z as n}from"./index.DhYhSSEc.js";import{H as o,a8 as d,$ as s,a1 as c,R as g}from"./vendor-vue.MuR-ak5S.js";import"./vendor-pdf.CZcEIuwn.js";import"./vendor-vuetify-core.CnSxw3Nd.js";/* empty css                     */const l=e({__name:"PedigreeDrawer",setup(e,{expose:l}){function p(){if(!t||!r||!a)return void i.error("pedigreejs libraries are not loaded.");let e=document.getElementById("pedigreejs");const o=document.getElementById("pedigree");!e&&o&&(e=document.createElement("div"),e.id="pedigreejs",o.appendChild(e));let d={targetDiv:"pedigree",btn_target:"pedigree_history",width:650,height:400,symbol_size:35,store_type:"session",diseases:[{type:"affected",colour:"#F68F35"}],labels:[],font_size:".75em",font_family:"Helvetica",font_weight:700,edit:!0,DEBUG:!1};const s=r.current(d);d.dataset=null!=s&&s.length>0?s:[{name:"father",sex:"M",top_level:!0},{name:"mother",sex:"F",top_level:!0},{name:"child",sex:"F",father:"father",mother:"mother",proband:!0,affected:!0}];try{let e=t.build(d);n.scale_to_fit(e)}catch(c){let e="";"string"==typeof c?e=c.toUpperCase():c instanceof Error&&(e=c.message),i.error("PedigreeJS initialization error: "+e,c)}}return o((()=>{p()})),l({getPedigreeDataUrl:function(){return new Promise(((e,t)=>{try{const r=document.querySelector("#pedigree svg");if(!r)return void e("");const a=(new XMLSerializer).serializeToString(r),i=document.createElement("canvas"),n=r.getAttribute("width")||450,o=r.getAttribute("height")||320;i.width=n,i.height=o;const d=i.getContext("2d"),s=new Image;s.src="data:image/svg+xml;base64,"+btoa(unescape(encodeURIComponent(a))),s.onload=()=>{d.drawImage(s,0,0);const t=i.toDataURL("image/png");e(t)},s.onerror=e=>t(e)}catch(r){t(r)}}))},getPedigreeData:function(){try{const e={targetDiv:"pedigree",btn_target:"pedigree_history"},t=r.current(e);if(i.debug("[PedigreeDrawer] Raw pedigree dataset fetched from cache:",t),!t||0===t.length)return i.warn("[PedigreeDrawer] No pedigree data found in cache"),null;const a={};let n=1;t.forEach((e=>{const t=e.name||e.id||`p${n}`;a[t]||(a[t]=n++)}));const o=[];t.forEach((e=>{const t=e.name||e.id||`p${n}`,r=a[t],i="M"===e.sex?1:"F"===e.sex?2:0,d=e.father&&a[e.father]||0,s=e.mother&&a[e.mother]||0,c=e.affected?2:1;o.push([1,r,d,s,i,c])})),o.sort(((e,t)=>e[1]-t[1]));const d=[2,o];return i.debug("[PedigreeDrawer] Final compact pedigree data prepared:",d),d}catch(e){return i.error("[PedigreeDrawer] Error getting pedigree data:",e),null}},initPedigree:p}),(e,t)=>(s(),d("div",null,t[0]||(t[0]=[c("div",{id:"pedigree",class:"pedigree-container"},null,-1),g(),c("div",{id:"pedigree_history"},null,-1)])))}},[["__scopeId","data-v-76f2cb8d"]]);export{l as default};
