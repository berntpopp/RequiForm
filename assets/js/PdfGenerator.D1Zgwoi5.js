import{E as e}from"./vendor-pdf.CZcEIuwn.js";import{Z as t,c as n,d as a,a8 as i,$ as r,j as o,a0 as s,R as l}from"./vendor-vue.MuR-ak5S.js";import{l as d,t as g,c}from"./index.bEcAwTH9.js";import{Q as p}from"./vendor-utils.CQfLIqa1.js";import{e as u}from"./vendor-vuetify-core.gPhD-pXQ.js";/* empty css                     */async function f(e,t={}){var n,a;let i;i="string"==typeof e?e:Array.isArray(e)||"object"==typeof e?JSON.stringify(e).replace(/\s/g,""):String(e);const r=i.length;d.debug(`QR code data size: ${r} characters`);const o=function(e,t=100){let n=t;return e>100&&(n=Math.min(t+20,120)),e>200&&(n=Math.min(t+40,140)),e>300&&(n=Math.min(t+60,160)),e>400&&(n=Math.min(t+80,180)),n}(r);let s="M";r>300?s="L":r<100&&(s="H");const l={width:t.width||o,margin:void 0!==t.margin?t.margin:1,color:{dark:(null==(n=t.color)?void 0:n.dark)||"#000000",light:(null==(a=t.color)?void 0:a.light)||"#FFFFFF"},errorCorrectionLevel:t.errorCorrectionLevel||s};try{return await p.toDataURL(i,l)}catch(g){throw d.error("Failed to generate QR code:",g),new Error(`QR code generation failed: ${g.message}`)}}async function h(e,t={}){if(!e)return f("{}",t.qrOptions||{});let n=e;Array.isArray(e)?e.length>=2&&2===e[0]?(d.debug("[qrService] Using standard PED format"),n=e):(d.debug("[qrService] Using array format"),n=e):"c"===e.f||"compact"===e.format?(d.debug("[qrService] Converting legacy object format to array"),n=e):e.h||e.hasImage?(d.debug("[qrService] Using image reference only"),n=[0]):(d.debug("[qrService] Unknown format:",typeof e),n=e);try{const e=(Array.isArray(n)?JSON.stringify(n):JSON.stringify([3,n])).replace(/\s/g,""),a=e.length;return d.debug("[qrService] Final pedigree data size:",a,"chars"),a>4e3?(d.warn("Pedigree data exceeds limit"),h([0],{qrOptions:t.qrOptions})):f(e,t.qrOptions||{})}catch(a){return d.error("Error generating pedigree QR:",a),f("{}",t.qrOptions||{})}}const m={__name:"PdfGenerator",props:{patientData:{type:Object,required:!0},pedigreeDataUrl:{type:String,required:!1,default:""},phenotypeData:{type:Object,required:!1,default:()=>({})}},setup(p,{expose:m}){const y=t(),v=n((()=>y.locale.value)),b=p,D=a("patientData",null);m({generatePdf:C});const S=n((()=>{const e=(null==D?void 0:D.selectedPanels)||[];return g.categories.map((t=>({categoryTitle:t.title,id:t.id,tests:t.tests.filter((t=>e.includes(t.id)))}))).filter((e=>e.tests.length>0))})),P=n((()=>{const e=(null==D?void 0:D.selectedPanels)||[];if(null==D?void 0:D.personalInfo){const t=D.personalInfo;return{patient:{firstName:t.firstName||"",lastName:t.lastName||"",birthdate:t.birthdate||"",sex:t.sex||"",insurance:t.insurance||"",insuranceId:t.insuranceId||"",referrer:t.referrer||"",diagnosis:t.diagnosis||""},selectedTests:e}}return{patient:{firstName:b.patientData.givenName||"",lastName:b.patientData.familyName||"",birthdate:b.patientData.birthdate||"",sex:b.patientData.sex||"",insurance:b.patientData.insurance||"",insuranceId:b.patientData.insuranceId||"",referrer:b.patientData.referrer||"",diagnosis:b.patientData.clinicalDiagnosis||""},selectedTests:[]}})),F=n((()=>{if(null==D?void 0:D.phenotypes)return D.phenotypes;if(b.phenotypeData){const e=[];return Object.entries(b.phenotypeData).forEach((([t,n])=>{Object.entries(n).forEach((([n,a])=>{if("no input"===a)return;const i=g.categories.find((e=>e.id===t));if(i){const t=i.phenotypes.find((e=>e.id===n));t&&t.hpo&&e.push({id:t.hpo,present:"present"===a||"yes"===a})}}))})),e}return[]})),x=n((()=>{var e,t,n;if(d.debug("[PdfGenerator] Direct patientData props:",JSON.stringify(b.patientData||{})),null==(t=null==(e=b.patientData)?void 0:e.pedigree)?void 0:t.data){const e=b.patientData.pedigree.data;return d.debug("[PdfGenerator] Using pedigree data from props:",JSON.stringify(e)),e}if(null==(n=null==D?void 0:D.pedigree)?void 0:n.data){const e=D.pedigree.data;return d.debug("[PdfGenerator] Using pedigree data from unified model:",JSON.stringify(e)),e}return b.pedigreeDataUrl?(d.debug("[PdfGenerator] No pedigree data available, using hasImage fallback"),{hasImage:!0}):(d.debug("[PdfGenerator] No pedigree data or image URL available"),null)}));function z(e,t){return e.replace(/{{\s*([\w]+)\s*}}/g,((e,n)=>n in t?t[n]:""))}function N(e){return"yes"===e?"Ja":"Nein"}function q(e,t,n){t&&t.elements&&t.elements.forEach((t=>{switch(t.type){case"text":!function(e,t,n){let a;a=t.contents&&t.contents[v.value]?z(t.contents[v.value],n):z(t.content,n),t.style&&(e.setFont(t.style.font||"Helvetica",t.style.fontStyle||"normal"),e.setFontSize(t.style.fontSize||12),e.setTextColor(t.style.color||"#000000")),e.text(a,t.position.x,t.position.y)}(e,t,n);break;case"image":!function(e,t,n){const a=z(t.source,n);e.addImage(a,"PNG",t.position.x,t.position.y,t.size.width,t.size.height)}(e,t,n);break;case"rectangle":!function(e,t){const{x:n,y:a}=t.position,{width:i,height:r}=t.size,o=t.style||{};o.fill&&o.fillColor&&e.setFillColor(o.fillColor),o.borderColor&&e.setDrawColor(o.borderColor),e.setLineWidth(o.borderWidth||1);let s="S";o.fill&&o.fillColor&&(s=o.borderWidth?"DF":"F"),e.rect(n,a,i,r,s)}(e,t);break;case"line":!function(e,t){const{x:n,y:a}=t.start,{x:i,y:r}=t.end,o=t.style||{};e.setLineWidth(o.lineWidth||1),o.color&&e.setDrawColor(o.color),e.line(n,a,i,r)}(e,t);break;default:d.debug("Unknown element type:",t.type)}}))}async function C(){var t,n,a,i,r,o,s,l,p;try{d.debug("Starting PDF generation process...");const w=new e({orientation:"portrait",unit:"pt",format:"A4"}),O={givenName:(null==(t=null==D?void 0:D.personalInfo)?void 0:t.firstName)||b.patientData.givenName||"",familyName:(null==(n=null==D?void 0:D.personalInfo)?void 0:n.lastName)||b.patientData.familyName||"",birthdate:(null==(a=null==D?void 0:D.personalInfo)?void 0:a.birthdate)||b.patientData.birthdate||"",sex:(null==(i=null==D?void 0:D.personalInfo)?void 0:i.sex)||b.patientData.sex||"",insurance:(null==(r=null==D?void 0:D.personalInfo)?void 0:r.insurance)||b.patientData.insurance||"",physicianName:(null==(o=null==D?void 0:D.personalInfo)?void 0:o.referrer)||b.patientData.physicianName||"",...b.patientData,...c.header,...c.footer};c.header&&q(w,c.header,O),c.body&&q(w,c.body,O);const{baseY:I=350,maxHeight:H=600,spacing:G=14,offsetX:R=60,secondPageBaseY:E=50}=c.panels||{};let T=I;if(S.value.forEach((e=>{T+G>H&&(w.addPage(),T=E),T=function(e,t,n,a,i){e.setFont("Helvetica","bold"),e.setFontSize(12),e.setTextColor("#000000"),e.text(t,n,a);const r=e.getTextWidth(t);return e.line(n,a+2,n+r,a+2),a+i}(w,e.categoryTitle,R,T,G),e.tests.forEach((e=>{let t=G;if(e.genes&&e.genes.length>0){const n=e.genes.join(", "),a=w.internal.pageSize.getWidth()-R-40;t+=w.splitTextToSize(n,a).length*G}T+t>H&&(w.addPage(),T=E),T=function(e,t,n,a,i){if(e.setFont("Helvetica","bold"),e.setFontSize(12),e.setTextColor("#000000"),e.text(t.name,n,a),a+=i,t.genes&&t.genes.length>0){e.setFont("Helvetica","italic"),e.setFontSize(10),e.setTextColor("#000000");const r=t.genes.join(", "),o=e.internal.pageSize.getWidth()-n-40;e.splitTextToSize(r,o).forEach((t=>{e.text(t,n,a),a+=i}))}return e.setFont("Helvetica","normal"),e.setFontSize(12),a}(w,e,R,T,G)}))})),(null==(s=c.qr)?void 0:s.position)&&(null==(l=c.qr)?void 0:l.size))try{const e={qrOptions:{width:128,margin:2,color:{dark:"#000000",light:"#ffffff"}}},t=await async function(e,t={}){const n=[1,1,[e.firstName||"",e.lastName||"",e.birthdate||"",e.sex||"",e.insurance||"",e.insuranceId||"",e.referrer||"",e.diagnosis||""],t.selectedTests||[]],a=JSON.stringify(n).replace(/\s/g,"");return d.debug("Patient QR data size:",a.length,"characters"),f(a,t.qrOptions||{})}(P.value.patient,{selectedTests:P.value.selectedTests,...e});w.setPage(1),w.setFont("Helvetica","bold"),w.setFontSize(10),w.text("Patient QR Code",c.qr.position.x+c.qr.size.width/2-40,c.qr.position.y-10),w.addImage(t,"PNG",c.qr.position.x,c.qr.position.y,c.qr.size.width,c.qr.size.height)}catch(u){d.debug("Failed to generate or add patient QR code:",u)}try{await async function(e){var t,n;let a={},i=!1;const r=(null==D?void 0:D.phenotypeData)||[];var o;if(r.length>0&&(a=(o=r)&&Array.isArray(o)?o.reduce(((e,t)=>(t&&t.status&&"no input"!==t.status&&(e[t.categoryId]||(e[t.categoryId]={}),e[t.categoryId][t.phenotypeId]=t.status),e)),{}):{},i=Object.values(a).some((e=>Object.values(e).some((e=>"no input"!==e)))),r.length>0&&!i&&d.debug("[PdfGenerator] Unified phenotype data existed but contained only 'no input' entries.")),!i&&b.phenotypeData){d.debug("[PdfGenerator] Checking legacy props.phenotypeData as unified data was empty or lacked meaningful entries."),a=b.phenotypeData;for(const e in a){for(const t in a[e])if("no input"!==a[e][t]){i=!0;break}if(i)break}}if(!i)return void d.debug("[PdfGenerator] Skipping phenotype page: No meaningful data found in unified or legacy sources.");d.debug("[PdfGenerator] Proceeding to render phenotype page."),e.addPage();const s=e.internal.getNumberOfPages();e.setPage(s),e.setFont("Helvetica","bold"),e.setFontSize(16);const l=(null==(n=null==(t=c.phenotypePage)?void 0:t.titleContents)?void 0:n[v.value])||"Phenotype Data";e.text(l,40,40);let p=70;e.setFont("Helvetica","normal"),e.setFontSize(12);try{const t=[];for(const e in a)for(const n in a[e]){const i=a[e][n];if("no input"!==i){const a=g.categories.find((t=>t.id===e));if(a){const r=a.phenotypes.find((e=>e.id===n));if(r&&r.hpo){const e=r.hpo.replace("HP:","");t.push(`${"present"===i?"+":"-"}${e}`)}else d.warn(`Could not find HPO ID for ${e}/${n} for QR code.`)}}}if(t.length>0){d.debug("Generating phenotype QR code with",t.length,"meaningful items");const n=F.value&&F.value.length>0?F.value:t;d.debug(`Using ${n===F.value?"computed":"collected"} phenotype data for QR code with ${n.length} items`);const a=await async function(e,t={}){const n=[1,2,function(e){if(!e||!Array.isArray(e))return d.warn("Invalid phenotype data provided for QR encoding"),[];try{return e.map((e=>{if(!e||!e.id)return d.debug("Skipping phenotype item with no ID"),null;let t;if("string"==typeof e.id&&e.id.startsWith("HP:")){if(t=parseInt(e.id.substring(3),10),isNaN(t))return d.warn(`Invalid HPO ID format: ${e.id}`),null}else t=e.id;return`${e.present?"+":"-"}${t}`})).filter((e=>null!==e))}catch(t){return d.error("Error encoding phenotype data:",t),[]}}(e||[])],a=JSON.stringify(n).replace(/\s/g,"");return d.debug("Phenotype QR data size:",a.length,"characters"),f(a,t.qrOptions||{})}(n,{qrOptions:{width:c.qr.size.width,margin:1,errorCorrectionLevel:"M"}});e.setFont("Helvetica","bold"),e.setFontSize(10),e.text("Phenotype QR Code",c.qr.position.x+c.qr.size.width/2-40,c.qr.position.y-10),e.addImage(a,"PNG",c.qr.position.x,c.qr.position.y,c.qr.size.width,c.qr.size.height)}else d.debug("No meaningful phenotype data available for QR code generation after filtering.")}catch(u){d.debug("Failed to generate or add phenotype QR code:",u)}e.setFontSize(12),e.setFont("Helvetica","normal"),p=70;for(const d in a){const t=g.categories.find((e=>e.id===d));if(!t||!t.phenotypes)continue;const n=t.phenotypes.filter((e=>{var t;return(null==(t=a[d])?void 0:t[e.id])&&"no input"!==a[d][e.id]}));n.length>0&&(e.setFont("Helvetica","bold"),e.text(t.title,40,p),p+=16,e.setFont("Helvetica","normal"),n.forEach((t=>{const n=a[d][t.id],i=`${t.name} (${t.hpo}): ${n}`;e.text(i,40,p),p+=14,p>e.internal.pageSize.getHeight()-40&&(e.addPage(),p=40)})),p+=10)}}(w)}catch(m){d.debug("Error rendering phenotype page:",m)}if(b.pedigreeDataUrl&&""!==b.pedigreeDataUrl){let e=null;if(x.value)try{d.debug("[PdfGenerator] Actual pedigree data being sent to QR generator:",JSON.stringify(x.value));const t=JSON.stringify(x.value).length,n=t>1e3?120:t>500?100:80;x.value?e=await h(x.value,{qrOptions:{width:n,margin:1,errorCorrectionLevel:"M"}}):(d.debug("[PdfGenerator] Invalid pedigree data format:",x.value),e=await h([0],{qrOptions:{width:80,margin:1,errorCorrectionLevel:"M"}})),d.debug("Generated pedigree QR code with PED format data")}catch(u){d.debug("Error generating pedigree QR code:",u);try{e=await h({hasImage:!0},{qrOptions:{width:80,margin:1,errorCorrectionLevel:"M"}}),d.debug("Generated fallback pedigree QR code (image reference only)")}catch(y){d.debug("Error generating fallback pedigree QR code:",y)}}await new Promise((t=>{const n=new Image;n.src=b.pedigreeDataUrl,n.onload=()=>{try{w.addPage();const t=w.internal.getNumberOfPages();w.setPage(t),w.setFont("Helvetica","bold"),w.setFontSize(16),w.text("Family Pedigree",40,40);const a=w.internal.pageSize.getWidth(),i=w.internal.pageSize.getHeight(),r=40,o=a-2*r,s=i-2*r-40,l=Math.min(o/n.width,s/n.height,1),d=n.width*l,g=n.height*l,p=(a-d)/2,u=80;w.addImage(b.pedigreeDataUrl,"PNG",p,u,d,g),e&&(w.setFont("Helvetica","bold"),w.setFontSize(10),w.text("Pedigree QR Code",c.qr.position.x+c.qr.size.width/2-40,c.qr.position.y-10),w.addImage(e,"PNG",c.qr.position.x,c.qr.position.y,c.qr.size.width,c.qr.size.height))}catch(a){d.debug("Error rendering pedigree:",a)}t()},n.onerror=()=>{d.debug("Error loading pedigree image."),t()}}))}const $=(null==(p=null==D?void 0:D.consent)?void 0:p.dataProcessing)||b.patientData.genDGConsentData&&"fill"===b.patientData.genDGConsentData.provided;if(d.debug("generatePdf in PdfGenerator: Checking consent data availability:",$),$){d.debug("Attempting to render consent page...");try{!function(e){d.debug("Rendering consent page...");try{if(!b.patientData.genDGConsentData||!b.patientData.genDGConsentData.form)return void d.debug("Consent form data is missing in PdfGenerator");const t=b.patientData.genDGConsentData.form,n=c.consent;d.debug("Consent Form Data:",JSON.stringify(t)),d.debug("Consent Config:",JSON.stringify(n));const a={consentName:t.consentName||"",zufallsbefundeLabel:N(t.questionSecondaryFindings),materialLabel:N(t.questionMaterial),extendedLabel:N(t.questionExtended),researchLabel:N(t.questionResearch)};e.addPage(),e.setFont("Helvetica","normal"),e.setFontSize(10);let i=n.startY||40;const r=40,o=40,s=e.internal.pageSize.getWidth()-r-o,l=n.lineSpacing||5,g=n.paragraphSpacing||10;if(n.title){e.setFont("Helvetica","bold"),e.setFontSize(n.title.fontSize||14);let t=n.title;n.titleContents&&n.titleContents[v.value]&&(t=n.titleContents[v.value],d.debug(`Using localized title for ${v.value}`)),e.splitTextToSize(t,s).forEach((t=>{e.text(t,r,i),i+=.5*(n.title.fontSize||14)})),i+=l,e.setFont("Helvetica","normal"),e.setFontSize(10)}d.debug("Rendering paragraphs...");let p=n.paragraphs;n.paragraphsContents&&n.paragraphsContents[v.value]&&(p=n.paragraphsContents[v.value],d.debug(`Using localized paragraphs for ${v.value}`)),p.forEach((t=>{const o=z(t,a);e.splitTextToSize(o,s).forEach((t=>{i+l>e.internal.pageSize.getHeight()-60&&(e.addPage(),i=n.startY||40),e.text(t,r,i),i+=1.2*e.getFontSize()})),i+=g}));let u=i+(n.signatureArea.marginTop||20);const f=n.signatureArea.lineStartX||r,h=n.signatureArea.patientLineEndX||f+200,m=n.signatureArea.physicianLineStartX||r+250,y=n.signatureArea.physicianLineEndX||m+200;let D=n.signatureArea;n.signatureAreaContents&&n.signatureAreaContents[v.value]&&(D=n.signatureAreaContents[v.value],d.debug(`Using localized signature area for ${v.value}`));const S=`${"en"===v.value?"Date":"Datum"}: ${t.consentDate||"___________"}`;e.text(S,f,u),u+=1.4*e.getFontSize();const P=u;e.line(f,P,h,P),D.patientLabel&&e.text(D.patientLabel,f,P+1.2*e.getFontSize());const F=u;e.line(m,F,y,F),D.physicianLabel&&e.text(D.physicianLabel,m,F+1.2*e.getFontSize());const x=Math.max(P,F)+2.4*e.getFontSize();D.signHint&&e.text(D.signHint,f,x),d.debug("Finished rendering consent page content.")}catch(t){d.debug("Error during renderConsentPage:",t)}}(w)}catch(C){d.debug("Caught error during renderConsentPage call:",C)}}const A=w.internal.getNumberOfPages();if(c.pageNumber&&c.pageNumber.enabled)for(let e=1;e<=A;e++){w.setPage(e);const{x:t,y:n}=c.pageNumber.position,a=`Page ${e} of ${A}`;w.setFont(c.pageNumber.font||"Helvetica",c.pageNumber.fontStyle||"normal"),w.setFontSize(c.pageNumber.fontSize||10),w.setTextColor(c.pageNumber.color||"#000000"),w.text(a,t,n)}const k=`PDF Schema: v${c.schema.version} | Test Schema: v${g.schema.version}`;for(let e=1;e<=A;e++)w.setPage(e),w.setFont("Helvetica","normal"),w.setFontSize(8),w.setTextColor("#000000"),w.text(k,40,w.internal.pageSize.getHeight()-10);w.save("genetic_test_requisition.pdf"),d.debug("PDF generation process completed.")}catch(w){d.debug("Error during PDF generation process:",w),alert("An error occurred while generating the PDF. Please check the console for details.")}}return(e,t)=>(r(),i("div",null,[o(u,{onClick:C,color:"primary",dark:""},{default:s((()=>t[0]||(t[0]=[l("\n      Generate PDF\n    ")]))),_:1})]))}};export{m as default};
