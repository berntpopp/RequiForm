import{_ as e,l as t,t as a,b as o}from"./index.UP9BWBox.js";import{aa as n,Z as l,c as p,d,b as i,o as s,a8 as r,$ as u,j as c,R as y,a0 as h,N as g,u as v,a2 as m,a1 as f,F as b,ab as S}from"./vendor-vue.MuR-ak5S.js";import{e as I,E as P,F as D,G as $}from"./vendor-vuetify-core.gPhD-pXQ.js";import"./vendor-pdf.CZcEIuwn.js";/* empty css                     */const j={class:"phenotype-selector"},E={key:0,class:"phenotype-panel"},_={class:"title"},k={key:0},V={class:"phenotype-info"},C={class:"hpo"},w={class:"description"},O={key:1},B=e({__name:"PhenotypeSelector",props:{groupedPanelDetails:{type:Array,required:!0},modelValue:{type:Object,default:()=>({})}},emits:["update:modelValue"],setup(e,{emit:B}){n((e=>({"68204b8c":v(o).styles.phenotypeSelectorBackgroundColor})));const{t:F}=l(),L=l(),U=p((()=>L.locale.value)),x=e,z=B,T=d("patientData",null),q=d("updatePhenotypeData",null),A=i(!1),G=i({});function M(){A.value=!A.value}function N(e){const t=a.categories.find((t=>t.id===e));return(null==t?void 0:t.phenotypes)||[]}function R(e){return e.names&&e.names[U.value]?e.names[U.value]:e.name}function Z(e){return e.descriptions&&e.descriptions[U.value]?e.descriptions[U.value]:e.description}function H(){if(z("update:modelValue",G.value),q){const e=[];Object.entries(G.value).forEach((([t,a])=>{Object.entries(a).forEach((([a,o])=>{e.push({categoryId:t,phenotypeId:a,status:o})}))})),q(e)}}T&&T.phenotypeData&&T.phenotypeData.length>0&&(t.debug("PhenotypeSelector: initializing from unified data model with",T.phenotypeData.length,"phenotype items"),t.debug("PhenotypeSelector: phenotype data items:",T.phenotypeData),T.phenotypeData.forEach((e=>{t.debug("PhenotypeSelector: processing phenotype item:",e),G.value[e.categoryId]||(t.debug("PhenotypeSelector: creating new category map for",e.categoryId),G.value[e.categoryId]={}),G.value[e.categoryId][e.phenotypeId]=e.status,t.debug(`PhenotypeSelector: set ${e.phenotypeId} to ${e.status} in category ${e.categoryId}`)})),t.debug("PhenotypeSelector: finished initialization, localPhenotypeData =",G.value)),s((()=>x.groupedPanelDetails),(e=>{e.forEach((e=>{if(!G.value[e.id]){const t=a.categories.find((t=>t.id===e.id));if(t&&t.phenotypes&&t.phenotypes.length){const a={};t.phenotypes.forEach((e=>{a[e.id]="no input"})),G.value[e.id]=a}}})),H()}),{immediate:!0,deep:!0}),s((()=>null==T?void 0:T.phenotypeData),(e=>{if(t.debug("PhenotypeSelector: watching unified phenotype data -",(null==e?void 0:e.length)||0,"items"),e&&e.length>0){if(t.debug("PhenotypeSelector: Found phenotype data in unified model:",e),1!==e.length||e[0].categoryId||e[0].phenotypeId)e.forEach((e=>{e.categoryId&&e.phenotypeId&&e.status?(G.value[e.categoryId]||(t.debug(`PhenotypeSelector: Creating category ${e.categoryId}`),G.value[e.categoryId]={}),G.value[e.categoryId][e.phenotypeId]=e.status,t.debug(`PhenotypeSelector: Set ${e.phenotypeId} = ${e.status} in ${e.categoryId}`)):t.warn("PhenotypeSelector: Invalid phenotype item:",e)}));else{t.debug("PhenotypeSelector: Detected direct format phenotype data");const a=(null==T?void 0:T.category)||"nephrology";G.value[a]||(t.debug(`PhenotypeSelector: Creating category ${a} for direct format data`),G.value[a]={}),Object.entries(e[0]).forEach((([e,o])=>{G.value[a][e]=o,t.debug(`PhenotypeSelector: Set direct format ${e} = ${o} in ${a}`)}))}G.value={...G.value},t.debug("PhenotypeSelector: Updated phenotype data:",G.value),A.value=!0,t.debug("PhenotypeSelector: Opening panel to show phenotype data")}}),{immediate:!0,deep:!0});const J=p((()=>x.groupedPanelDetails));return(e,t)=>(u(),r("div",j,[c(I,{color:"primary",small:"",onClick:M},{default:h((()=>[y(g(v(F)(A.value?"phenotypeSelector.toggleButton.hide":"phenotypeSelector.toggleButton.add")),1)])),_:1}),t[7]||(t[7]=y()),c(P,null,{default:h((()=>[A.value?(u(),r("div",E,[f("h2",_,g(v(F)("phenotypeSelector.panelTitle")),1),t[6]||(t[6]=y()),(u(!0),r(b,null,S(J.value,(e=>{var a;return u(),r("div",{key:e.id,class:"category-section"},[f("h3",null,g(e.categoryTitle),1),t[5]||(t[5]=y()),(null==(a=N(e.id))?void 0:a.length)?(u(),r("div",k,[(u(!0),r(b,null,S(N(e.id),(a=>(u(),r("div",{key:a.id,class:"phenotype-item"},[f("div",V,[f("strong",null,g(R(a)),1),t[0]||(t[0]=y()),f("span",C,"("+g(a.hpo)+")",1),t[1]||(t[1]=y()),f("p",w,g(Z(a)),1)]),t[4]||(t[4]=y()),c(D,{modelValue:G.value[e.id][a.id],"onUpdate:modelValue":t=>G.value[e.id][a.id]=t,inline:"",density:"compact",onChange:e=>{H()},class:"radio-group"},{default:h((()=>[c($,{label:v(F)("phenotypeSelector.radioLabels.noInput"),value:"no input",density:"compact"},null,8,["label"]),t[2]||(t[2]=y()),c($,{label:v(F)("phenotypeSelector.radioLabels.present"),value:"present",density:"compact"},null,8,["label"]),t[3]||(t[3]=y()),c($,{label:v(F)("phenotypeSelector.radioLabels.absent"),value:"absent",density:"compact"},null,8,["label"])])),_:2},1032,["modelValue","onUpdate:modelValue","onChange"])])))),128))])):(u(),r("div",O,[f("p",null,g(v(F)("phenotypeSelector.noPhenotypesMessage")),1)]))])})),128))])):m("",!0)])),_:1})]))}},[["__scopeId","data-v-074f1c1a"]]);export{B as default};
